---
import Layout from "~/layouts/Layout.astro";
import ProjectCard from "~/components/ProjectCard.astro";
import { buttonVariants } from "prowo-ui/ui/button";
import { cn } from "prowo-ui/lib/utils"
import { getActiveYear, getParticipant, getProjects, getPreviewImageUrl, getParticipants, getWorkshopYear } from "~/lib/projects";

export async function getStaticPaths() {
  const activeYear = getActiveYear();
  const participants = getParticipants(activeYear);
  
  return participants.map(({ username }) => ({
    params: { participant: username }
  }));
}

const { participant } = Astro.params;
const activeYear = getActiveYear();

const participantData = getParticipant(activeYear, participant as string);
const projects = getProjects(activeYear, participant as string);
const workshopMeta = getWorkshopYear(activeYear)?.['!'];

if (!participantData) {
  return Astro.redirect('/projekte');
}
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-4">
        <div>
          <h1 class="ledger-regular text-3xl md:text-4xl font-bold mb-2">
            Projekte by {participantData.displayName}
          </h1>
          {workshopMeta && (
            <p class="text-lg text-muted-foreground">
              {workshopMeta.displayName}
            </p>
          )}
        </div>
      </div>
      
      <div class="flex items-center gap-4 text-sm text-muted-foreground">
        <span>{projects.length} {projects.length === 1 ? 'Projekt' : 'Projekte'}</span>
        <span>Aktuelles Jahr: {activeYear}</span>
      </div>
    </div>

    {projects.length === 0 ? (
      <div class="text-center py-12">
        <h2 class="text-xl font-semibold mb-2">Noch keine Projekte</h2>
        <p class="text-muted-foreground">
          {participantData.displayName} hat noch keine Projekte hochgeladen.
        </p>
      </div>
    ) : (
      <>
        {/* Projects Grid */}
        <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-3">
          {projects.map(({ projectName, project }) => {
            return (
              <ProjectCard
                username={participant as string}
                displayName={participantData.displayName}
                projectName={projectName}
                project={project}
                year={activeYear}
                previewImageUrl={getPreviewImageUrl(activeYear, participant as string, projectName)}
              />
            );
          })}
        </div>
      </>
    )}

    <!-- Navigation -->
    <div class="mt-12 pt-8 border-t border-border flex justify-between">
      <a
        class={cn(buttonVariants({ variant: "outline" }))}
        href="/projekte"
      >
        ‚Üê Alle Projekte
      </a>
      <a
        class={cn(buttonVariants({ variant: "outline" }))}
        href={`/projekte/${activeYear}`}
      >
        Alle Projekte {activeYear}
      </a>
    </div>
  </div>
</Layout>