---
import { getProject, getProjectUrl, getAvailableYears, getParticipants, getProjects } from "~/lib/projects";

export async function getStaticPaths() {
  const years = getAvailableYears();
  const paths: Array<{ params: { year: string; participant: string; project: string } }> = [];
  
  years.forEach(year => {
    const participants = getParticipants(year);
    participants.forEach(({ username }) => {
      const projects = getProjects(year, username);
      projects.forEach(({ projectName }) => {
        paths.push({
          params: { 
            year: year.toString(), 
            participant: username, 
            project: projectName 
          }
        });
      });
    });
  });
  
  return paths;
}

const { year, participant, project } = Astro.params;
const yearNum = parseInt(year as string, 10);

const projectData = getProject(yearNum, participant as string, project as string);

if (!projectData) {
  return Astro.redirect('/projekte');
}

const projectUrl = getProjectUrl(yearNum, participant as string, project as string);
---

<!doctype html>
<html lang="de">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{projectData.name} - {participant}</title>
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      
      body {
        font-family: 'Geist', sans-serif;
        background: #000;
        overflow: hidden;
      }
      
      #iframe-container {
        position: relative;
        width: 100vw;
        height: 100vh;
      }
      
      iframe {
        width: 100%;
        height: 100%;
        border: none;
      }
      
      .overlay {
        position: fixed;
        left: 0;
        right: 0;
        background: rgba(0, 0, 0, 0.95);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: white;
        z-index: 1000;
        transform: translateY(-100%);
        transition: transform 0.3s ease-in-out;
        padding: 1rem 2rem;
      }
      
      .overlay.visible {
        transform: translateY(0);
      }
      
      .header-overlay {
        top: 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }
      
      .footer-overlay {
        bottom: 0;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        transform: translateY(100%);
      }
      
      .footer-overlay.visible {
        transform: translateY(0);
      }
      
      .overlay-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        max-width: 1200px;
        margin: 0 auto;
      }
      
      .project-info h1 {
        font-size: 1.25rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
      }
      
      .project-info p {
        font-size: 0.875rem;
        opacity: 0.8;
      }
      
      .controls {
        display: flex;
        gap: 0.75rem;
        align-items: center;
      }
      
      .btn {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        text-decoration: none;
        font-size: 0.875rem;
        transition: all 0.2s;
        cursor: pointer;
      }
      
      .btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 0.3);
      }
      
      .btn-primary {
        background: #ec3750;
        border-color: #ec3750;
      }
      
      .btn-primary:hover {
        background: #d12a43;
      }
      
      #mouse-detector {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 60px;
        z-index: 999;
        background: transparent;
      }
      
      #mouse-detector-bottom {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        height: 60px;
        z-index: 999;
        background: transparent;
      }
    </style>
  </head>
  <body>
    <!-- Mouse Detection Areas -->
    <div id="mouse-detector"></div>
    <div id="mouse-detector-bottom"></div>
    
    <!-- Header Overlay -->
    <div class="overlay header-overlay" id="header-overlay">
      <div class="overlay-content">
        <div class="project-info">
          <h1>{projectData.name}</h1>
          <p>von {participant} • Projektwoche {yearNum}</p>
        </div>
        <div class="controls">
          <a href={`/projekte/${yearNum}/${participant}`} class="btn">
            ← Alle von {participant}
          </a>
          <a href={projectUrl} target="_blank" class="btn btn-primary">
            Direkt öffnen ↗
          </a>
        </div>
      </div>
    </div>
    
    <!-- Footer Overlay -->
    <div class="overlay footer-overlay" id="footer-overlay">
      <div class="overlay-content">
        <div class="project-info">
          <p>Hosting bereitgestellt von Hackclub Stade</p>
        </div>
        <div class="controls">
          <a href={`/projekte/${yearNum}`} class="btn">
            Alle Projekte {yearNum}
          </a>
          <a href="/projekte" class="btn">
            Zur Übersicht
          </a>
        </div>
      </div>
    </div>
    
    <!-- Main Content -->
    <div id="iframe-container">
      <iframe 
        src={projectUrl}
        title={`${projectData.name} - ${participant}`}
        loading="lazy"
        sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox"
      ></iframe>
    </div>

    <script lang="js">
      let headerTimeout, footerTimeout;
      const header = document.getElementById('header-overlay');
      const footer = document.getElementById('footer-overlay');
      const topDetector = document.getElementById('mouse-detector');
      const bottomDetector = document.getElementById('mouse-detector-bottom');
      
      function showHeader() {
        clearTimeout(headerTimeout);
        header.classList.add('visible');
      }
      
      function hideHeader() {
        headerTimeout = setTimeout(() => {
          header.classList.remove('visible');
        }, 1000);
      }
      
      function showFooter() {
        clearTimeout(footerTimeout);
        footer.classList.add('visible');
      }
      
      function hideFooter() {
        footerTimeout = setTimeout(() => {
          footer.classList.remove('visible');
        }, 1000);
      }
      
      // Top area detection
      topDetector.addEventListener('mouseenter', showHeader);
      topDetector.addEventListener('mouseleave', hideHeader);
      header.addEventListener('mouseenter', showHeader);
      header.addEventListener('mouseleave', hideHeader);
      
      // Bottom area detection
      bottomDetector.addEventListener('mouseenter', showFooter);
      bottomDetector.addEventListener('mouseleave', hideFooter);
      footer.addEventListener('mouseenter', showFooter);
      footer.addEventListener('mouseleave', hideFooter);
      
      // Hide overlays initially after a delay
      setTimeout(() => {
        header.classList.remove('visible');
        footer.classList.remove('visible');
      }, 3000);
      
      // Initial show
      header.classList.add('visible');
      footer.classList.add('visible');
    </script>
  </body>
</html>